// This is your Prisma schema file
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  name          String
  role          UserRole       @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  orders        Order[]
}

model Product {
  id          String        @id @default(cuid())
  name        String
  description String
  price       Float
  stock       Int
  images      String[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  variants    Variant[]
  orderItems  OrderItem[]
}

model Variant {
  id        String      @id @default(cuid())
  name      String
  price     Float
  stock     Int
  productId String
  product   Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@index([productId])
}

model Order {
  id              String           @id @default(cuid())
  userId          String
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  status          OrderStatus      @default(PENDING)
  items           OrderItem[]
  shippingDetails ShippingDetails?
  paymentMethod   PaymentMethod
  paymentToken    String?
  totalAmount     Float
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  paymentDetails  PaymentDetails?  @relation // Tambahkan relasi

  @@index([userId])
}

model PaymentDetails {
  id            String   @id @default(cuid())
  orderId       String   @unique
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  provider      String
  transactionId String
  status        String
  amount        Float
  rawResponse   String   // Simpan JSON sebagai string
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  variantId String?
  variant   Variant? @relation(fields: [variantId], references: [id])
  quantity  Int
  price     Float

  @@index([orderId])
  @@index([productId])
  @@index([variantId])
}

model ShippingDetails {
  id         String  @id @default(cuid())
  orderId    String  @unique
  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  name       String
  email      String
  phone      String
  address    String
  city       String
  postalCode String
}

enum OrderStatus {
  PENDING
  PAID
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  bank_transfer
  ewallet
  cod
}

enum UserRole {
  USER
  ADMIN
}