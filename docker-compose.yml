services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: teelite-club:latest
    container_name: teelite-club-app
    restart: unless-stopped
    ports:
      - "3001:3000"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/teelite?schema=public
      - JWT_SECRET=change_me_in_production
      - JWT_REFRESH_SECRET=change_me_in_production
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - NEXT_PUBLIC_BASE_URL=http://localhost:3001
      - NEXTAUTH_SECRET=change_me_in_production
      - NEXTAUTH_URL=http://localhost:3001
      - DOCKER_HEALTHCHECK=true
    # Disable healthcheck for now
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 120s
    networks:
      - teelite-network
    # Graceful shutdown with proper signal handling
    stop_grace_period: 30s

  # Database service
  db:
    image: postgres:15-alpine
    container_name: teelite-club-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=teelite
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Add initialization scripts if needed
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - teelite-network

  # Add pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    container_name: teelite-club-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@teelite.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - teelite-network

volumes:
  postgres_data:
    name: teelite-postgres-data
  pgadmin_data:
    name: teelite-pgadmin-data

networks:
  teelite-network:
    name: teelite-network
    driver: bridge
